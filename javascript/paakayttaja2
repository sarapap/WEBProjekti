const popup = document.getElementById('popup');
const openButton = document.getElementById('openButton');
const closeButton = document.getElementById('closeButton');
const saveButton = document.getElementById('saveButton');

const openPopup = () => {
  popup.style.display = 'block';
};

const closePopup = () => {
  popup.style.display = 'none';
};


const saveProduct = () => {
    const tuotename = document.getElementById('name').value;
    const description = document.getElementById('description').value;
    const image = document.getElementById('image').value;
    const price = document.getElementById('price').value;
    const cost = document.getElementById('cost').value;
    const typeId = getTyypeId();
    const subtype = document.getElementById('subtype').value;

  //alatyyppi selections tulee paatyyppi valinnan mukaan
//   const addSubtypes = (subtypes) => {
    const subtypes = getSubtyypes();
    const subtypeElement= document.getElementById('subtype');

 subtypes.forEach((subtype) => {
   const option = document.getElementById('option');
   option.value = subtype;
   option.textContent = subtypes;
   subtype.appendChild(option);
 });
// };

    addTuote();
    addKategoriaTuote();
  closePopup();


const getSubtyypes = async () => {
  const response = await fetch(`http://localhost:3000/api/v1/paatyypi/${type}`,
  {
    method: 'GET',
    headers: {
      'Content-Type': 'application/json',
    },
  });
  const subtypes = await response.json();
  console.log(subtypes);

    return subtypes;
};

const getTyypeId = async () => {
  const response = await fetch(`http://localhost:3000/api/v1/paatyypi/${type}/${subtype}`,
  {
    method: 'GET',
    headers: {
      'Content-Type': 'application/json',
    },
  });
  const data = await response.json();
  console.log(data);
  const typeId = data[0];
    return typeId;
};

const addTuote = async () => {
    const formData = new FormData();
    formData.append('tuote_nimi', tuotename);
    formData.append('tuote_kuvaus', description);
    formData.append('tuote_hinta', price);
    formData.append('tuote_kustannus', cost);
    formData.append('tyyppi_id', data);
    formData.append('tuote_kuva', image);

    try {
        const response = await fetch('http://localhost:3000/api/v1/tuote', {
            method: 'POST',
            body: formData,
        });

        if (!response.ok) {
            throw new Error('Failed to add product');
        }

        const responseData = await response.json();
        console.log('Uusi tuote tallennettu:', responseData);
        closePopup();
    } catch (error) {
        console.error('Virhe tallennettaessa tuotetta:', error);
    }
};

const findSelectedCategories = async () => {
    const checkboxes = document.querySelectorAll('input[type="checkbox"]');
    const selectedCategories = document.getElementById('selected-categories');

    const checkboxes = document.querySelectorAll('input[type="checkbox"]');

    checkboxes.forEach((checkbox) => {
        checkbox.addEventListener('change', () => {
            const selectedCategories = [];

            checkboxes.forEach((cb) => {
                if (cb.checked) {
                    const label = document.querySelector(`label[for="${cb.id}"]`).textContent;
                    selectedCategories.push(label);
                }
            });

            console.log(selectedCategories);
        });
    });
    return selectedCategories;

  };

  const getTuoteId = async () => {
    const response = await fetch(`http://localhost:3000/api/v1/tuote/${tuotename}`,
    {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
      },
    });
    const data = await response.json();
    console.log(data);
    const tuoteId = data[0];
      return tuoteId;
  };

  const getKategoriaId = async () => {

    const selectedCategories = findSelectedCategories();
    selectedCategories.forEach((category) => {

        const response = await fetch(`http://localhost:3000/api/v1/kategoria/${category}`,
        {
        method: 'GET',
        headers: {
            'Content-Type': 'application/json',
        },
    });

        console.log(kategoriaId);
    });



    const data = await response.json();
    console.log(data);
    const kategoriaId = data[0];
      return kategoriaId;
  };

const addKategoriaTuote= async () => {

    const tuoteId = getTuoteId();
    const kategoriaId = getKategoriaId();

    const formData = new FormData();
    formData.append('tuote_id', tuoteId);
    formData.append('kategoria_id', kategoriaId);

    try {
        const response = await fetch('http://localhost:3000/api/v1/kategoria_tuote', {
            method: 'POST',
            body: formData,
        });

        if (!response.ok) {
            throw new Error('Failed to add category');
        }
        const responseData = await response.json();
        console.log('Uusi kategoria tallennettu:', responseData);
        closePopup();
    } catch (error) {
        console.error('Virhe tallennettaessa kategoriaa:', error);
    }
};
};

openButton.addEventListener('click', openPopup);
closeButton.addEventListener('click', closePopup);
saveButton.addEventListener('click', saveProduct);
